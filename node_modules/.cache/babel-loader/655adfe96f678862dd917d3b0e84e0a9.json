{"ast":null,"code":"var _jsxFileName = \"/Users/babatundeojo/Desktop/dvt/src/screens/muisc.grid/music.grid.view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MusicCard from '../../components/music.card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  grid: {\n    padding: 30\n  },\n  cardWidth: {\n    width: 345\n  },\n  cardHeight: {\n    height: 240\n  }\n}));\n\nconst MusicGridView = props => {\n  _s();\n\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const [artists, setArtists] = useState([]);\n  useEffect(() => {\n    var _props$artists, _props$artists$artist, _props$artists$artist2;\n\n    const artists = props === null || props === void 0 ? void 0 : (_props$artists = props.artists) === null || _props$artists === void 0 ? void 0 : (_props$artists$artist = _props$artists.artistData) === null || _props$artists$artist === void 0 ? void 0 : (_props$artists$artist2 = _props$artists$artist.artistList) === null || _props$artists$artist2 === void 0 ? void 0 : _props$artists$artist2.data;\n    console.log(artists);\n    setArtists(artists);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: artists && artists.map(artist => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(MusicCard, {\n            width: classes.cardWidth,\n            height: classes.cardHeight,\n            data: true\n          }, `${Math.random()}${artist.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, artist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MusicGridView, \"Dlt3tJBeCox2vy5/5XBIq/t1E7M=\", false, function () {\n  return [useStyles];\n});\n\n_c = MusicGridView;\nexport default MusicGridView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicGridView\");","map":{"version":3,"sources":["/Users/babatundeojo/Desktop/dvt/src/screens/muisc.grid/music.grid.view.tsx"],"names":["React","useEffect","useState","MusicCard","makeStyles","Grid","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","grid","cardWidth","cardHeight","MusicGridView","props","setSpacing","classes","handleChange","event","Number","target","value","artists","setArtists","artistData","artistList","data","console","log","map","artist","Math","random","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAOA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,GADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GAJ8B;AAQrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADF,GAR4B;AAWrCC,EAAAA,IAAI,EAAE;AACLF,IAAAA,OAAO,EAAE;AADJ,GAX+B;AAcrCG,EAAAA,SAAS,EAAE;AACPL,IAAAA,KAAK,EAAE;AADA,GAd0B;AAiBrCM,EAAAA,UAAU,EAAE;AACRP,IAAAA,MAAM,EAAE;AADA;AAjByB,CAAZ,CAAD,CAA5B;;AAsBA,MAAMQ,aAAa,GAAIC,KAAD,IAAgB;AAAA;;AAElC,QAAM,CAACL,OAAD,EAAUM,UAAV,IAAwBrB,KAAK,CAACE,QAAN,CAAe,CAAf,CAA9B;AACA,QAAMoB,OAAO,GAAGhB,SAAS,EAAzB;;AAEA,QAAMiB,YAAY,GAAIC,KAAD,IAAgB;AACjCH,IAAAA,UAAU,CAACI,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP,CAAV;AACH,GAFD;;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,UAAM2B,OAAO,GAAGR,KAAH,aAAGA,KAAH,yCAAGA,KAAK,CAAEQ,OAAV,4EAAG,eAAgBE,UAAnB,oFAAG,sBAA4BC,UAA/B,2DAAG,uBAAwCC,IAAxD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAJQ,EAIN,CAACR,KAAD,CAJM,CAAT;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEE,OAAO,CAACd,IAAnC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,cAAc,EAAC,QAA/B;AAAA,kBACGoB,OAAO,IAAIA,OAAO,CAACO,GAAR,CAAaC,MAAD,iBACtB,QAAC,IAAD;AAAsB,UAAA,IAAI,MAA1B;AAA2B,UAAA,SAAS,EAAEd,OAAO,CAACN,IAA9C;AAAA,iCACE,QAAC,SAAD;AAEE,YAAA,KAAK,EAAEM,OAAO,CAACL,SAFjB;AAGE,YAAA,MAAM,EAAEK,OAAO,CAACJ,UAHlB;AAIE,YAAA,IAAI;AAJN,aACQ,GAAEmB,IAAI,CAACC,MAAL,EAAc,GAAEF,MAAM,CAACG,EAAG,EADpC;AAAA;AAAA;AAAA;AAAA;AADF,WAAWH,MAAM,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADU;AADd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnCD;;GAAMpB,a;UAGcb,S;;;KAHda,a;AAqCN,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport MusicCard from '../../components/music.card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    grid: {\n     padding: 30\n    },\n    cardWidth: {\n        width: 345,\n    },\n    cardHeight: {\n        height: 240,\n    }\n}));\n\nconst MusicGridView = (props: any) => {\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    const handleChange = (event: any) => {\n        setSpacing(Number(event.target.value));\n    };\n    \n    const [artists, setArtists] = useState([]);\n\n    useEffect(() => {\n        const artists = props?.artists?.artistData?.artistList?.data;\n        console.log(artists)\n        setArtists(artists)\n    }, [props])\n\n    return (\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justifyContent=\"center\">\n              {artists && artists.map((artist: any) => (\n                <Grid key={artist.id} item className={classes.grid}>\n                  <MusicCard \n                    key={`${Math.random()}${artist.id}`}\n                    width={classes.cardWidth}\n                    height={classes.cardHeight}\n                    data\n                />\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n    );\n}\n\nexport default MusicGridView;"]},"metadata":{},"sourceType":"module"}