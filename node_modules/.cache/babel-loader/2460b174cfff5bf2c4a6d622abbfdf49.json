{"ast":null,"code":"import Communication from \"./communication\";\nimport config from '../config';\nconst ArtistSearchService = {\n  loadArtists(dispatch, artist) {\n    console.log(\"dispatch\", dispatch);\n    console.log(\"artist is \", artist);\n    dispatch({\n      type: 'LOAD_ARTISTS',\n      payload: null\n    });\n    Communication.getMethod(`${config.endpoints.artistSearch}${artist}`).then(artists => {\n      dispatch({\n        type: 'GET_ARTISTS',\n        payload: artists\n      });\n    }).catch(() => {\n      dispatch({\n        type: 'ERROR_ARTIST',\n        payload: null\n      });\n    }).finally(() => {});\n  }\n\n};\nexport default ArtistSearchService;","map":{"version":3,"sources":["/Users/babatundeojo/Desktop/dvt/src/services/artist.search.ts"],"names":["Communication","config","ArtistSearchService","loadArtists","dispatch","artist","console","log","type","payload","getMethod","endpoints","artistSearch","then","artists","catch","finally"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,mBAAmB,GAAG;AAExBC,EAAAA,WAAW,CAACC,QAAD,EAAgBC,MAAhB,EAAgC;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;AACAD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIAT,IAAAA,aAAa,CAACU,SAAd,CAAyB,GAAET,MAAM,CAACU,SAAP,CAAiBC,YAAa,GAAEP,MAAO,EAAlE,EAAqEQ,IAArE,CAA0EC,OAAO,IAAI;AACjFV,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEK;AAFJ,OAAD,CAAR;AAIH,KALD,EAMCC,KAND,CAMO,MAAM;AACTX,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KAXD,EAYCO,OAZD,CAYS,MAAM,CAEd,CAdD;AAeH;;AAxBuB,CAA5B;AA2BA,eAAed,mBAAf","sourcesContent":["import Communication from \"./communication\";\nimport config from '../config';\n\nconst ArtistSearchService = {\n\n    loadArtists(dispatch: any, artist: string) {\n        console.log(\"dispatch\", dispatch)\n        console.log(\"artist is \", artist)\n        dispatch({\n            type: 'LOAD_ARTISTS',\n            payload: null\n        })\n        Communication.getMethod(`${config.endpoints.artistSearch}${artist}`).then(artists => {\n            dispatch({\n                type: 'GET_ARTISTS',\n                payload: artists\n            })\n        })\n        .catch(() => {\n            dispatch({\n                type: 'ERROR_ARTIST',\n                payload: null\n            })\n        })\n        .finally(() => {\n\n        })\n    }\n}\n\nexport default ArtistSearchService;"]},"metadata":{},"sourceType":"module"}