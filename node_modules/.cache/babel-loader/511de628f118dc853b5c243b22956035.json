{"ast":null,"code":"var _jsxFileName = \"/Users/babatundeojo/Desktop/dvt/src/screens/music.details/music.details.view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MusicCard from '../../components/music.card';\nimport MusicTracks from './components/music.tracks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  details: {\n    paddingTop: 20\n  },\n  song: {\n    padding: 22\n  },\n  cardWidth: {\n    width: 245\n  },\n  cardHeight: {\n    height: 140\n  }\n}));\n\nconst MusicDetailsView = props => {\n  _s();\n\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const [universities, setUniversities] = useState([]);\n  useEffect(() => {\n    var _props$universities, _props$universities$u, _props$universities$u2;\n\n    const universities = props === null || props === void 0 ? void 0 : (_props$universities = props.universities) === null || _props$universities === void 0 ? void 0 : (_props$universities$u = _props$universities.universityData) === null || _props$universities$u === void 0 ? void 0 : (_props$universities$u2 = _props$universities$u.universityList) === null || _props$universities$u2 === void 0 ? void 0 : _props$universities$u2.responseData;\n    setUniversities(universities);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.details,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(MusicTracks, {\n          data: universities\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.song,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: [0, 1, 2, 3].map(value => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(MusicCard, {\n            data: universities,\n            width: classes.cardWidth,\n            height: classes.cardHeight\n          }, `${Math.random()}${value}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MusicDetailsView, \"Dk0ChymQofCiD5wCEee7fKattU8=\", false, function () {\n  return [useStyles];\n});\n\n_c = MusicDetailsView;\nexport default MusicDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicDetailsView\");","map":{"version":3,"sources":["/Users/babatundeojo/Desktop/dvt/src/screens/music.details/music.details.view.tsx"],"names":["React","useEffect","useState","MusicCard","MusicTracks","makeStyles","Grid","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","details","paddingTop","song","cardWidth","cardHeight","MusicDetailsView","props","setSpacing","classes","handleChange","event","Number","target","value","universities","setUniversities","universityData","universityList","responseData","Math","random","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport MusicCard from '../../components/music.card';\nimport MusicTracks from './components/music.tracks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    details: {\n        paddingTop: 20,\n    },\n    song: {\n        padding: 22,\n    },\n    cardWidth: {\n        width: 245,\n    },\n    cardHeight: {\n        height: 140,\n    }\n}));\n\nconst MusicDetailsView = (props: any) => {\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    const handleChange = (event: any) => {\n        setSpacing(Number(event.target.value));\n    };\n    \n    const [universities, setUniversities] = useState([]);\n\n    useEffect(() => {\n        const universities = props?.universities?.universityData?.universityList?.responseData;\n        setUniversities(universities)\n    }, [props])\n\n    return (\n        <Grid container className={classes.root}>\n            <Grid item xs={12} className={classes.details}>\n                <Grid container justifyContent=\"center\">\n                <MusicTracks \n                        key={Math.random()}\n                        data={universities}\n                    />\n                </Grid>\n            </Grid>  \n            <Grid item xs={12} className={classes.song}>\n                <Grid container justifyContent=\"center\">\n                {[0, 1, 2,3].map((value) => (\n                    <Grid key={value} item>\n                    <MusicCard \n                        key={`${Math.random()}${value}`}\n                        data={universities}\n                        width={classes.cardWidth}\n                        height={classes.cardHeight}\n                    />\n                    </Grid>\n                ))}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default MusicDetailsView;"]},"metadata":{},"sourceType":"module"}