{"ast":null,"code":"var _jsxFileName = \"/Users/babatundeojo/Downloads/Babatunde/frontend/src/screens/university/university.view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../../components/card';\nimport { arrayChunk } from '../../utils/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UniversityView = props => {\n  _s();\n\n  console.log(\"passed university props is \", props.universities);\n  const [universities, setUniversities] = useState([]);\n  useEffect(() => {\n    var _props$universities, _props$universities$u, _props$universities$u2;\n\n    const universities = props === null || props === void 0 ? void 0 : (_props$universities = props.universities) === null || _props$universities === void 0 ? void 0 : (_props$universities$u = _props$universities.universityData) === null || _props$universities$u === void 0 ? void 0 : (_props$universities$u2 = _props$universities$u.universityList) === null || _props$universities$u2 === void 0 ? void 0 : _props$universities$u2.responseData;\n    setUniversities(universities);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: universities && arrayChunk(universities, 3).map((universitiesRow, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: universitiesRow.map((university, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          university: university\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UniversityView, \"NvRTGAHJzbAKJxYKGXDOLXgosbk=\");\n\n_c = UniversityView;\nexport default UniversityView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UniversityView\");","map":{"version":3,"sources":["/Users/babatundeojo/Downloads/Babatunde/frontend/src/screens/university/university.view.tsx"],"names":["React","useEffect","useState","Card","arrayChunk","UniversityView","props","console","log","universities","setUniversities","universityData","universityList","responseData","map","universitiesRow","index","university"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAgB;AAAA;;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,KAAK,CAACG,YAAjD;AAEA,QAAM,CAACA,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,UAAMQ,YAAY,GAAGH,KAAH,aAAGA,KAAH,8CAAGA,KAAK,CAAEG,YAAV,iFAAG,oBAAqBE,cAAxB,oFAAG,sBAAqCC,cAAxC,2DAAG,uBAAqDC,YAA1E;AACAH,IAAAA,eAAe,CAACD,YAAD,CAAf;AACH,GAHQ,EAGN,CAACH,KAAD,CAHM,CAAT;AAMA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cACFG,YAAY,IAAIL,UAAU,CAACK,YAAD,EAAe,CAAf,CAAV,CAA4BK,GAA5B,CAAgC,CAACC,eAAD,EAAuBC,KAAvB,kBAC7C;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKD,eAAe,CAACD,GAAhB,CAAoB,CAACG,UAAD,EAAkBD,KAAlB,kBACjB;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI,QAAC,IAAD;AAEI,UAAA,UAAU,EAAEC;AAFhB,WACSD,KADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADa;AADd;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH,CAzBD;;GAAMX,c;;KAAAA,c;AA2BN,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Card from '../../components/card';\nimport { arrayChunk } from '../../utils/helper';\n\nconst UniversityView = (props: any) => {\n    console.log(\"passed university props is \", props.universities)\n\n    const [universities, setUniversities] = useState([]);\n\n    useEffect(() => {\n        const universities = props?.universities?.universityData?.universityList?.responseData;\n        setUniversities(universities)\n    }, [props])\n\n\n    return <React.Fragment>\n        {universities && arrayChunk(universities, 3).map((universitiesRow: any, index: any) => (\n            <div className=\"row\">\n                {universitiesRow.map((university: any, index: any) => (\n                    <div className=\"column\">\n                        <Card \n                            key={index}\n                            university={university}\n                        />\n                    </div>\n                ))}\n            </div>\n        ))}\n    </React.Fragment>\n}\n\nexport default UniversityView;"]},"metadata":{},"sourceType":"module"}